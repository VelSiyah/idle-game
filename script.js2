<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Idle Game</title>
</head>
<body>
    <h1>Idle Game</h1>
    <div id="stats">
        <p id="health">Health: </p>
        <p id="stamina">Stamina: </p>
        <p id="ki">Ki: </p>
        <p id="distance">Distance: </p>
    </div>
    <div id="actions">
        <button id="restBtn">Rest</button>
        <button id="crawlBtn">Crawl</button>
        <button id="situpBtn">Situp</button>
    </div>

    <script>
        // JavaScript code for the game
        // Define the Player class...
        // (Paste the JavaScript code for the game here)
    </script>

    <script>
        // Python code for the game
        import threading
        import time

        class Player:
            def __init__(self):
                # Base resources
                self.health = 1
                self.stamina = 0
                self.ki = 0
                self.distance = 0  # Added Distance parameter

                # Maximum resources
                self.max_health = 100
                self.max_stamina = 100
                self.max_ki = 100

                # Base stats
                self.vigor = 1
                self.dexterity = 1
                self.willpower = 1

                # Experience
                self.vigor_exp = 0
                self.dexterity_exp = 0
                self.willpower_exp = 0

                # Race-specific difficulties
                self.vigor_difficulty = 75
                self.dexterity_difficulty = 100
                self.ki_difficulty = 100

            def rest(self):
                while True:
                    if self.stamina < self.max_stamina:
                        self.stamina += 1
                        self.update_exp("stamina", 1)
                    if self.health < self.max_health:
                        self.health += 1
                        self.update_exp("health", 1)
                    if self.ki < self.max_ki:
                        self.ki += 1
                        self.update_exp("ki", 1)
                    time.sleep(1)

            def crawl(self):
                while self.distance > 0:
                    if self.stamina > 0 and self.health > 0:
                        self.dexterity += 1
                        self.stamina -= 1
                        self.health -= 1
                        self.distance -= 1
                        self.update_exp("dexterity", 2)
                        time.sleep(1)
                print("You reached your destination!")

            def situp(self):
                while True:
                    if self.stamina > 0:
                        self.vigor += 2
                        self.stamina -= 1
                        self.update_exp("vigor", 2)
                        time.sleep(1)

            def update_exp(self, stat, exp):
                if stat == "vigor":
                    self.vigor_exp += exp
                    if self.vigor_exp >= self.vigor_difficulty:
                        self.vigor_exp -= self.vigor_difficulty
                        self.vigor_difficulty = 75  # No autonomous increase
                        self.vigor += 1
                        print("Vigor increased!")
                elif stat == "dexterity":
                    self.dexterity_exp += exp
                    if self.dexterity_exp >= self.dexterity_difficulty:
                        self.dexterity_exp -= self.dexterity_difficulty
                        self.dexterity_difficulty = 100  # No autonomous increase
                        self.dexterity += 1
                        print("Dexterity increased!")
                elif stat == "ki":
                    self.willpower_exp += exp
                    if self.willpower_exp >= self.ki_difficulty:
                        self.willpower_exp -= self.ki_difficulty
                        self.ki_difficulty = 100  # No autonomous increase
                        self.willpower += 1
                        print("Willpower increased!")

        function updateStats(player) {
            document.getElementById("health").innerText = "Health: " + player.health;
            document.getElementById("stamina").innerText = "Stamina: " + player.stamina;
            document.getElementById("ki").innerText = "Ki: " + player.ki;
            document.getElementById("distance").innerText = "Distance: " + player.distance;
        }

        function setupActions(player) {
            document.getElementById("restBtn").addEventListener("click", function() {
                // Execute rest action
                var rest_thread = new Worker(function() {
                    player.rest();
                });
                rest_thread.start();
            });

            document.getElementById("crawlBtn").addEventListener("click", function() {
                // Prompt the user to enter distance
                var distance = parseInt(prompt("Enter distance to crawl:"));
                player.distance = distance;

                // Execute crawl action
                var crawl_thread = new Worker(function() {
                    player.crawl();
                });
                crawl_thread.start();
            });

            document.getElementById("situpBtn").addEventListener("click", function() {
                // Execute sit-up action
                var situp_thread = new Worker(function() {
                    player.situp();
                });
                situp_thread.start();
            });
        }

        function main() {
            var player = new Player();
            updateStats(player);
            setupActions(player);
        }

        main();
    </script>
</body>
</html>
